{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"table",
				"tablePrefix"
			],
			[
				"previous",
				"previousDate"
			],
			[
				"next",
				"nextDate"
			],
			[
				"tota",
				"totalIn"
			],
			[
				"date",
				"dateString"
			],
			[
				"_sor",
				"_sortDirection"
			],
			[
				"_sort",
				"_sortField"
			],
			[
				"spl_",
				"spl_autoload_register"
			],
			[
				"_",
				"__construct"
			],
			[
				"thirdPart",
				"thirdPartiesModel"
			],
			[
				"categ",
				"categoryId"
			],
			[
				"E",
				"ERROR"
			],
			[
				"third",
				"thirdpartyId"
			],
			[
				"categor",
				"categoryId"
			],
			[
				"userId",
				"userId"
			],
			[
				"exec",
				"execute"
			],
			[
				"padding",
				"padding	padding: all"
			],
			[
				"background",
				"background	background-color: transparent"
			],
			[
				"colo",
				"color	color: name"
			],
			[
				"color",
				"color	color: rgb"
			],
			[
				"hea",
				"header	Tag"
			]
		]
	},
	"buffers":
	[
		{
			"file": "controller/transactions.php",
			"settings":
			{
				"buffer_size": 2962,
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "view/transactions/view.php",
			"settings":
			{
				"buffer_size": 1967,
				"line_ending": "Windows",
				"name": "<pre><?php foreach ($this->transactions as $transa"
			}
		},
		{
			"contents": "<?php\n\nclass Collection implements Countable, Iterator {\n	\n	private $_table;\n	private $_models = array();\n	private $_position = 0; // Array iterator\n\n	private $_conditions = array();\n	private $_parameters = array();\n	private $_sortField;\n	private $_sortDirection;\n	private $_limit;\n	private $_offset;\n\n	public function __construct($table) {\n		$this->_table = $table;\n		$this->filter(\"user_id = :userId\",\n				array('userId' => Model::getUserId()));\n	}\n\n	public function filter($condition, $parameters=array()) {\n		$this->_conditions[] = $condition;\n		$this->_parameters = array_merge($this->_parameters, $parameters);\n		\n		return $this;\n	}\n\n	public function sortBy($field, $direction) {\n		$this->_sortField = $field;\n		$this->_sortDirection = $direction;\n\n		return $this;\n	}\n\n	public function page($pageNumber, $perPage) {\n		$this->_limit = $perPage;\n		$this->_offset = $perPage * ($pageNumber-1);\n\n		return $this;\n	}\n\n	/**\n	 * Runs a COUNT() query using the filters\n	 */\n	public function countValidRecords() {\n		$db = Model::getDatabase();\n		$query = \"SELECT COUNT(id)\n			FROM ($db->tablePrefix}{$this->_table}\n			\";\n\n		// WHERE clause\n		if (count($this->_conditions) > 0) {\n			$conditions = implode($this->_conditions, ' AND ');\n			$query .= ' WHERE ' . $conditions;\n		}\n\n		$stmt = $db->prepare($query);\n		if ( $stmt->execute($this->_parameters) ) {\n			\n		}\n	}\n\n	/**\n	 * Load all records that fit the current filters.\n	 */\n	public function load() {\n		$db = Model::getDatabase();\n		$query = \"SELECT *\n			FROM {$db->tablePrefix}{$this->_table}\n			\";\n\n		// WHERE clause\n		if (count($this->_conditions) > 0) {\n			$conditions = implode($this->_conditions, ' AND ');\n			$query .= ' WHERE ' . $conditions;\n		}\n\n		// ORDER BY clause\n		if ($this->_sortField) {\n			$query .= \" ORDER BY {$this->_sortField} {$this->_sortDirection} \";\n		}\n\n		// LIMIT OFFSET clause\n		if ($this->_limit) {\n			$query .= \" LIMIT {$this->_limit} OFFSET {$this->_offset} \";\n		}\n		\n		$stmt = $db->prepare( $query );\n\n		if ( $stmt->execute( $this->_parameters ) ) {\n			$result = $stmt->fetchAll(PDO::FETCH_ASSOC);\n			foreach ($result as $record) {\n				$this->_models[] = Model::createPopulated($this->_table, $record['id'], $record);\n			}\n		} else {\n			$err = print_r($stmt->errorInfo(), true);\n			throw new Exception( 'Could not load database data for a records: ' . $err);\n		}\n\n		return $this; // Chaining\n	}\n\n// COUNTABLE\n	public function count() {\n		return count($this->_models);\n	}\n\n// ITERATOR\n	public function rewind() {\n		$this->_position = 0;\n	}\n\n	public function current() {\n		return $this->_models[$this->_position];\n	}\n\n	public function key() {\n		return $this->_position;\n	}\n\n	public function next() {\n		$this->_position++;\n	}\n\n	public function valid() {\n		return isset($this->_models[$this->_position]);\n	}\n}",
			"file": "lib/Collection.php",
			"file_size": 2448,
			"file_write_time": 130006724495224609,
			"settings":
			{
				"buffer_size": 2786,
				"line_ending": "Windows"
			}
		},
		{
			"file": "lib/Model.php",
			"settings":
			{
				"buffer_size": 2360,
				"line_ending": "Windows"
			}
		},
		{
			"file": "controller/categories.php",
			"settings":
			{
				"buffer_size": 314,
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"contents": "<table>\n	<thead>\n		<tr>\n			<th></th>\n			<th></th>\n			<th></th>\n		</tr>\n	</thead>\n	<tfoot>\n		<tr>\n			<td></td>\n			<td></td>\n			<td></td>\n		</tr>\n	</tfoot>\n	<tbody>\n		<tr>\n			<td></td>\n			<td></td>\n			<td></td>\n		</tr>\n	</tbody>\n</table>",
			"file": "view/categories/index.php",
			"file_size": 48,
			"file_write_time": 130006712016757812,
			"settings":
			{
				"buffer_size": 235,
				"line_ending": "Windows",
				"name": "<pre><?php print_r($this->categories); ?> </pre>"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 380.0,
		"selected_items":
		[
			[
				"pack",
				"Package Control: Discover Packages"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"php",
				"Set Syntax: PHP"
			],
			[
				"ssphp",
				"Set Syntax: PHP"
			],
			[
				"ssh",
				"Set Syntax: HTML"
			],
			[
				"Snippet: ",
				"Snippet: Start Docblock"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 230.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/CrowFinance/controller/index.php",
		"/C/xampp/htdocs/CrowFinance/lib/Model.php",
		"/C/xampp/htdocs/CrowFinance/lib/Collection.php",
		"/C/xampp/htdocs/CrowFinance/lib/User.php",
		"/C/xampp/htdocs/CrowFinance/controller/login.php",
		"/C/xampp/htdocs/CrowFinance/view/login/index.php",
		"/C/xampp/htdocs/CrowFinance/lib/Controller.php",
		"/C/xampp/htdocs/CrowFinance/index.php",
		"/C/xampp/htdocs/CrowFinance/lib/View.php",
		"/C/xampp/htdocs/CrowFinance/lib/Session.php",
		"/C/xampp/htdocs/finances_mvc/views/login/index.html.php",
		"/C/xampp/htdocs/finances_mvc/controllers/login.php",
		"/C/xampp/htdocs/finances_mvc/libs/View.php",
		"/C/xampp/htdocs/finances_mvc/index.php",
		"/C/xampp/htdocs/CrowFinance/lib/Bootstrap.php",
		"/C/xampp/htdocs/CrowFinance/view/footer.php",
		"/C/xampp/htdocs/CrowFinance/config/config.ini",
		"/C/xampp/htdocs/CrowFinance/view/index/index.php",
		"/C/xampp/htdocs/CrowFinance/view/header.php",
		"/C/xampp/htdocs/CrowFinance/lib/Database.php",
		"/C/xampp/htdocs/CrowFinance/view/error/index.php",
		"/C/xampp/htdocs/CrowFinance/lib/Config.php",
		"/C/xampp/htdocs/CrowFinance/controller/error.php",
		"/C/xampp/htdocs/CrowFinance/README.md",
		"/C/xampp/htdocs/CrowFinance/README",
		"/C/xampp/htdocs/CrowFinance/csscrush/lib/Core.php",
		"/C/xampp/htdocs/finances_mvc/old/css/oldstyle.css",
		"/C/xampp/htdocs/finances_mvc/old/css/test.css",
		"/C/xampp/htdocs/finances_mvc/old/css/template.css",
		"/C/xampp/htdocs/finances_mvc/old/css/style.css",
		"/C/xampp/htdocs/CrowFinance/controller/Index.php",
		"/C/xampp/htdocs/finances_mvc/old/controllers/index.php",
		"/C/xampp/htdocs/finances_mvc/old/libs/Controller.php",
		"/C/xampp/htdocs/finances_mvc/old/libs/View.php",
		"/C/xampp/htdocs/CrowFinance/.htaccess",
		"/C/xampp/htdocs/CrowFinance/controllers/error.php",
		"/C/xampp/htdocs/finances_mvc/old/index.php",
		"/C/xampp/htdocs/finances_mvc/old/libs/Database.php",
		"/C/xampp/htdocs/mvc/lib/Model.php",
		"/C/xampp/htdocs/finances_mvc/models/transactions_model.php",
		"/C/xampp/htdocs/finances_mvc/libs/Database.php",
		"/C/xampp/htdocs/finances_mvc/models/thirdparties_model.php",
		"/C/xampp/htdocs/finances_mvc/libs/Model.php",
		"/C/xampp/htdocs/finances_mvc/models/dashboard_model.php",
		"/C/xampp/htdocs/finances_mvc/libs/CachedModel.php",
		"/C/xampp/htdocs/mvc/lib/Database.php",
		"/C/xampp/htdocs/finances_mvc/libs/Controller.php",
		"/C/xampp/htdocs/finances_mvc/views/transactions/create.html.php",
		"/C/Users/Sam/Documents/GitHub/beard/README.markdown",
		"/C/xampp/htdocs/finances_mvc/controllers/transactions.php",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/myplugins.php",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/emailtest.php",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/.htaccess",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/style.css",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/header.php",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/header 2.php",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/functions 2.php",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/functions.php",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/hello.php",
		"/C/Users/Sam/Documents/Websites/charity/wp-content/themes/charity/footer.php",
		"/C/Users/Sam/Documents/Websites/charity/wp-content/themes/charity/functions.php",
		"/C/Users/Sam/Documents/Websites/charity/wp-content/themes/charity/sidebar.php",
		"/C/Users/Sam/Documents/Websites/charity/wp-content/themes/charity/index.php",
		"/C/Users/Sam/Documents/Websites/charity/wp-content/themes/charity/style.css",
		"/C/Users/Sam/Documents/Websites/charity/wp-content/themes/charity/header.php",
		"/C/Users/Sam/Documents/Websites/charity/wp-content/themes/twentyeleven/index.php",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/wp-config 2.php",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/.htaccess 2",
		"/C/Users/Sam/AppData/Local/Temp/fz3temp-1/wp-config.php",
		"/C/xampp/htdocs/index.php",
		"/C/Users/Sam/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\",\n",
			"();\n",
			"#content, #sidebar {\n		width: 100%;\n		float: none;\n	}",
			" ======== */"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "controller/transactions.php",
					"settings":
					{
						"buffer_size": 2962,
						"regions":
						{
						},
						"selection":
						[
							[
								123,
								48
							]
						],
						"settings":
						{
							"auto_name": "<?php",
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "view/transactions/view.php",
					"settings":
					{
						"buffer_size": 1967,
						"regions":
						{
						},
						"selection":
						[
							[
								1219,
								1219
							]
						],
						"settings":
						{
							"auto_name": "<pre><?php foreach ($this->transactions as $transa",
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/Collection.php",
					"settings":
					{
						"buffer_size": 2786,
						"regions":
						{
						},
						"selection":
						[
							[
								1923,
								1923
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1026.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/Model.php",
					"settings":
					{
						"buffer_size": 2360,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1425.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "controller/categories.php",
					"settings":
					{
						"buffer_size": 314,
						"regions":
						{
						},
						"selection":
						[
							[
								309,
								309
							]
						],
						"settings":
						{
							"auto_name": "<?php",
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "view/categories/index.php",
					"settings":
					{
						"buffer_size": 235,
						"regions":
						{
						},
						"selection":
						[
							[
								135,
								135
							]
						],
						"settings":
						{
							"auto_name": "<pre><?php print_r($this->categories); ?> </pre>",
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"model",
				"lib/Model.php"
			],
			[
				"collection",
				"lib/Collection.php"
			],
			[
				"view",
				"lib/View.php"
			],
			[
				"boots",
				"lib/Bootstrap.php"
			],
			[
				"sess",
				"lib/Session.php"
			],
			[
				"contr",
				"lib/Controller.php"
			],
			[
				"user",
				"lib/User.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 207.0,
	"status_bar_visible": true
}
